{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/sequelize\"","webpack:///./src/app/auth/auth.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/app/auth/auth.controller.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/user.model.ts","webpack:///external commonjs \"sequelize-typescript\"","webpack:///./src/app/blog/blog.model.ts","webpack:///external commonjs \"bcrypt\"","webpack:///./src/app/auth/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///external commonjs \"@nestjs/passport\"","webpack:///./src/app/blog/blog.module.ts","webpack:///./src/app/blog/blog.controller.ts","webpack:///./src/app/auth/jwt-auth.guard.ts","webpack:///./src/app/blog/blog.service.ts","webpack:///external commonjs \"sequelize\"","webpack:///./src/app/blog/dtos/search-blog.dto.ts","webpack:///./src/app/blog/dtos/create-blog.dto.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthModule } from './auth/auth.module';\nimport { BlogModule } from './blog/blog.module';\nimport { Blog } from './blog/blog.model';\nimport { User } from './auth/user.model';\n\n@Module({\n  imports: [\n    SequelizeModule.forRoot({\n      dialect: 'postgres',\n      host: process.env.POSTGRES_HOST,\n      port: parseInt(process.env.POSTGRES_PORT),\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DB,\n      autoLoadModels: true,\n      synchronize: true,\n      models: [User, Blog],\n    }),\n    AuthModule,\n    BlogModule,\n  ],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/sequelize\");","import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { User } from './user.model';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    SequelizeModule.forFeature([User]),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET, // In production, use environment variable\n      signOptions: { expiresIn: '1h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {} ","module.exports = require(\"@nestjs/jwt\");","import { Controller, Post, Body, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('signin')\n  async signIn(\n    @Body() signInDto: { username: string; password: string }\n  ) {\n    const result = await this.authService.signIn(\n      signInDto.username,\n      signInDto.password\n    );\n    \n    if (!result) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    \n    return result;\n  }\n} ","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from './user.model';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel(User)\n    private userModel: typeof User,\n    private jwtService: JwtService\n  ) {}\n\n  async signIn(username: string, password: string) {\n    const user = await this.userModel.findOne({ where: { username } });\n    if (user && (await bcrypt.compare(password, user.password))) {\n      const payload = { username: user.username, sub: user.id };\n\n      return {\n        accessToken: this.jwtService.sign(payload),\n        message: 'Sign in successfully',\n      };\n    }\n    return null;\n  }\n}\n","import { Column, Model, Table, HasMany } from 'sequelize-typescript';\nimport { Blog } from '../blog/blog.model';\n\n@Table\nexport class User extends Model {\n  @Column\n  username: string;\n\n  @Column\n  password: string;\n\n  @HasMany(() => Blog)\n  blogs: Blog[];\n\n  @Column\n  role: string;\n}\n","module.exports = require(\"sequelize-typescript\");","import {\n  Column,\n  Model,\n  Table,\n  ForeignKey,\n  BelongsTo,\n  DataType,\n} from 'sequelize-typescript';\nimport { User } from '../auth/user.model';\n\n@Table\nexport class Blog extends Model {\n  @Column\n  title: string;\n\n  @Column\n  content: string;\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n  })\n  tag: string[];\n\n  @ForeignKey(() => User)\n  @Column\n  authorId: number;\n\n  @BelongsTo(() => User)\n  author: User;\n}\n","module.exports = require(\"bcrypt\");","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET, // Use same secret as in AuthModule\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n} ","module.exports = require(\"passport-jwt\");","module.exports = require(\"@nestjs/passport\");","import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { BlogController } from './blog.controller';\nimport { BlogService } from './blog.service';\nimport { Blog } from './blog.model';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Blog])],\n  controllers: [BlogController],\n  providers: [BlogService],\n})\nexport class BlogModule {}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Delete,\n  Param,\n  UseGuards,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { BlogService } from './blog.service';\nimport { SearchBlogDto } from './dtos/search-blog.dto';\nimport { CreateBlogDto } from './dtos/create-blog.dto';\n\n@Controller('blogs')\n@UseGuards(JwtAuthGuard)\nexport class BlogController {\n  constructor(private readonly blogService: BlogService) {}\n\n  @Post()\n  create(@Body() createBlogDto: CreateBlogDto) {\n    return this.blogService.create(createBlogDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.blogService.findAll();\n  }\n\n  @Post('search')\n  search(@Body() searchDto: SearchBlogDto) {\n    return this.blogService.search(searchDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.blogService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateBlogDto: any) {\n    return this.blogService.update(+id, updateBlogDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.blogService.remove(+id);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n","import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Blog } from './blog.model';\nimport { User } from '../auth/user.model';\nimport { CreateBlogDto } from './dtos/create-blog.dto';\nimport { SearchBlogDto } from './dtos/search-blog.dto';\nimport { Op } from 'sequelize';\nimport { UpdateBlogDto } from './dtos/update-blog.dto';\n\n@Injectable()\nexport class BlogService {\n  constructor(\n    @InjectModel(Blog)\n    private blogModel: typeof Blog\n  ) {}\n\n  async create(createBlogDto: CreateBlogDto) {\n    return this.blogModel\n      .create({\n        ...createBlogDto,\n      })\n      .then((blog) => {\n        return {\n          data: blog,\n          message: 'Blog created successfully',\n        };\n      });\n  }\n\n  async findAll() {\n    return this.blogModel\n      .findAll({\n        include: [\n          {\n            model: User,\n            attributes: ['id', 'username'], // Only return safe user fields\n          },\n        ],\n      })\n      .then((blogs) => {\n        return {\n          data: blogs,\n          message: 'Blogs fetched successfully',\n        };\n      });\n  }\n\n  async search(searchDto: SearchBlogDto) {\n    const { keyword, offset, limit } = searchDto;\n    const blogs = await this.blogModel.findAndCountAll({\n      where: {\n        [Op.or]: [\n          { title: { [Op.like]: `%${keyword}%` } },\n          { tag: { [Op.like]: `%${keyword}%` } },\n        ],\n      },\n      offset,\n      limit,\n    });\n\n    return {\n      data: blogs.rows,\n      total: blogs.count,\n      offset,\n      limit,\n    };\n  }\n\n  async findOne(id: number) {\n    const blog = await this.blogModel.findOne({\n      where: { id },\n      include: [\n        {\n          model: User,\n          attributes: ['id', 'username'],\n        },\n      ],\n    });\n\n    if (!blog) {\n      throw new NotFoundException(`Blog with ID ${id} not found`);\n    }\n\n    return {\n      data: blog,\n    };\n  }\n\n  async update(id: number, updateBlogDto: UpdateBlogDto) {\n    const blog = await this.blogModel.findByPk(id);\n\n    if (!blog) {\n      throw new NotFoundException(`Blog with ID ${id} not found`);\n    }\n\n    await blog.update(updateBlogDto);\n\n    return {\n      data: blog,\n      message: 'Blog updated successfully',\n    };\n  }\n\n  async remove(id: number) {\n    const blog = await this.blogModel.findByPk(id);\n\n    if (!blog) {\n      throw new NotFoundException(`Blog with ID ${id} not found`);\n    }\n\n    await blog.destroy();\n    return { message: 'Blog deleted successfully' };\n  }\n}\n","module.exports = require(\"sequelize\");","export class SearchBlogDto {\n  keyword: string;\n  offset: number;\n  limit: number;\n}\n","export class CreateBlogDto {\n  title: string;\n  content: string;\n  tag: string[];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}